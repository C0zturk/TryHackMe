Target host  - 10.10.162.245
Local Host - 10.4.65.102

I start by running an nmap -sV -A 10.10.162.245 command to locate open ports/services, versions and the OS.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
![image](https://user-images.githubusercontent.com/48399589/163285558-5942928e-7958-40d3-bd6d-1daec3ddf6fb.png)




--------------------------------------------------------------
The nmap scan identifies that there is web traffic going to port 80 & 8080.  I try accessing the web page of the gui.
--------------------------------------------------------------
<<<INSERT SCREENSHOT OF WEB GUI UNDERGOING MAINTENANCE SCREENSHOT>>>>

--------------------------------------------------------------
Accessing the web gui results in nothing but a message saying the page is undergoing maintenance.  I will try accessing the webpage via port 8080 this time.
--------------------------------------------------------------
<<<INSERT SCREENSHOT OF WEB GUI via PORT 8080>>>


--------------------------------------------------------------
Accessing the web page via 8080 indicates that there may be directories hidden inside of that web gui that aren't visible.  I will try using gobuster to locate any hidden directories.

I type the following command into the kali terminal:

gobuster dir -u http://10.10.162.245 -w /usr /share/wordlists/dirbuster/directory-list-2.3.medium.txt

dir =  looks for hidden directors int he URL specified.
-u = specifies the URL to look for directors within
-w = applies wordlist with common directory names as a dictionary to help locate any hidden directories.
--------------------------------------------------------------
<<<INSERT SCREENSHOT OF GOBUSTER COMMAND>>>


--------------------------------------------------------------
Gobuster has identified that directory /development exists on the web page.  Now I can type in http://10.10.162.245/development onto the web gui.

--------------------------------------------------------------
<<<INSERT SCREENSHOT OF /DEVELOPMENT DIRECTORY OF WEB PAGE>>>



--------------------------------------------------------------
Navigating to the URL 10.10.162.245/development has revealed 2x txt files called dev.txt & j.txt.  The contents of j.txt indicate that user j has a weak password which I can attempt to brute force.  Whilst the contents of j.txt indicate that there may be useful information in /etc/shadow.

From my previous nmap scan I know that SSH is open so maybe I will attempt to ssh into the server and use J or K as the username.


--------------------------------------------------------------
<<INSERT SCREENSHOT OF SSH to 10.10.162.245 VIA USER J>>>






--------------------------------------------------------------
Bingo.  I can SSH into the server and successfully guessed that the user is J.  Now I can run a brute force password cracking tool to attempt to get inside.

I will use Hydra and the default rockyou.txt wordlist in kali to attempt to crack this.

I navigate to /usr/share/wordlists/ and locate rockyou.txt.

Before I attempt to brute force the ssh log in I will attempt to locate some information using SMB as it has been identified as exposed by nmap previously.

--------------------------------------------------------------
<<INSERT SMB SCREENSHOTS>>>





--------------------------------------------------------------
Using the command smbmap -H 10.10.162.245 I can identify what host share permissions.  This has identified that Anonymous Read only access is available which is good as we can enter without a password.

I use the command smbclient \\\\10.10.162.245\\anonymous to gain smb anonymous access to the client.  Typing LS lists whats in the current directory - this identifies a txt file called staff.txt.  

Typing get.txt and exit allows me to retrieve the staff.txt file to my local machine and exit back to my kali terminal.

I now type cat staff.txt to open the contents of the txt.

This gives us 2 potential usernames as Jan and Kay.

Now I will use Hydra to execute a brute force attack to crack the password and ssh into the machine.

I run the following command:

sudo hydra -l jan -P /usr/share/wordlists/rockyou.txt 10.10.111.49 ssh


-l = sets the username as jan
-P = sets the password but in this case its specifying a password list called rockyou.txt.  Basically Hydra will run every password in that list with the user J to find a successful match.
ssh = Tells Hydra to attack via ssh.

-------------------------------------------------------------------------------------
<<<INSERT SCREENSHOT OF SUCCESSFUL BRUTE FORCE HYDRA COMMAND>>>









------------------------------------------------------------------------------------
As per the image above the brute force attack was successful revealing the password of user jan is armando.  I now enter ssh jan@10.10.110.118 and the password to successfully enter the server via SSH.

------------------------------------------------------------------------------------
<<<INSERT IMAGE OF LOGGING INTO SERVER AS JAN SSH>>>




------------------------------------------------------------------------------------
Now that I can log in successfully to the server using the user acc jan - I aim to enumerate privileges.  For this I will use the LinEnum script to on the victim machine.  I need to get the LiNEnum script onto the victim so I will set my attack machine up as a HTTP server using the command:
`python3 -m http.server`


-----------------------------------------------------------------------------

<<<INSERT IMAGE OF ATTK BOX AS HTTP SERVER>>>


-----------------------------------------------------------------------------

Now if I navigate to my attack machines IP address:8000 via the web gui (http://10.4.65.102:8000) I can see that my machine's directorys are accessible via the HTTP server - & so is the LiNEnum script.  We are going to basically retrieve the LiNEnum script from the HTTP server via the victim machine as user jan.

-----------------------------------------------------------------------------
<<<INSERT IMG OF SSH SHELL RETRIEVING SCRIPT>>>


-----------------------------------------------------------------------------
I attempt to retrieve the .sh script from the http server however I am unsucessful in the current working directory due to permisions.  I navigate to the /tmp directory as it usually has write permissions and attempt to retrieve the .sh script again and it is successful.
I execute the script via the command `bash LinEnum.sh`

-----------------------------------------------------------------------------
<<INSERT IMG OF RUNNING bash LinEnum.sh>>>>





-----------------------------------------------------------------------------
Now that I have executed LinEnum on the victim I have to determine how I can enumerate permissions or retrieve useful information.  On the victim server I type in the command ls to and locate a usr folder.  I navigate to that folder and locate another user named kay.  From there I enter ls and identify her .bak pass file.  There is a vast majority of useful information we can grab here but for the focus of this room I will attempt to retrieve another password.

I cd .. back to the user kay directory.  I enter `ls -la` to look for hidden directories and for permissions related to those.

I locate the sub directory .ssh.  Navigating in here reveals the id_rsa file which is the user kay's private rsa key - excellent.  I enter the command cat id_rsa to identify the RSA key and I navigate back to my Kali Shell.

---------------------------------------------------------------------
<<<ENTER USER KAY SSH LOCATION IMAGE HERE>>>>



---------------------------------------------------------------------
From the Kali shell I enter cat id_rsa to create a .txt file and paste the contents of the user kays private ssh key in there.

---------------------------------------------------------------------
<<<ENTER CAT_IDR_RSA IMAGE THAT CREATS TXT FILE>>>




---------------------------------------------------------------------
I then give it execute permissions by typing `chmod +x id_rsa`.  I try to ssh back into the shell using user kay this time with the following command `ssh -i id_rsa kay@10.10.153.90` but unfortunately the key is passphrase protected.  

---------------------------------------------------------------------

<<ENTER IMAGE THAT GIVES EXECUTE PERMISSIONS TO FILE>>>



---------------------------------------------------------------------

I can use an offline password cracking tool such as John the Ripper to brute force this.  I locate the ssh john the ripper ssh2john.py file in /usr/share/john.  I cd back to the root directory and execute the password cracking .py file against the RSA key via the command:

`python3 /usr/share/john/ssh2john.py id_rsa`

This appears to print out a hash key.  I enter the same command with > hash.txt added to the end to print that output to a txt file.
---------------------------------------------------------------------

<<ENTER IMAGE OF COMMAND ABOVE PRINTING OUT HASH KEY OF RSA FILE>>>


---------------------------------------------------------------------
Now I can run john the ripper against the hash.txt file using the rockyou.txt password dictionary to brute force the passphrase of the SSH private key passphrase.

---------------------------------------------------------------------

<<<ADD IMG OF BEESWAX SSH PASSPHRASE>>>>



---------------------------------------------------------------------
Now I can enter the web server as user kay by entering the command:
`ssh -i id_rsa kay@10.10.153.90`  The victim server will ask for the passphrase of the ssh rsa file which I now know as beeswax.  After entering beeswax I have successfully logged in to the server as kay.

---------------------------------------------------------------------
<<ADD SCREENSHOT OF LOGGING IN AS KAY>>>


---------------------------------------------------------------------
Now I want to identify the password of user kay to complete the room.  I try the same method used above to identify jans password by brute forcing the ssh login using the command:
`sudo hydra -l kay -P /usr/share/wordlists/rockyou.txt 10.10.153.90 ssh`

---------------------------------------------------------------------

<<INSERT SCREENSHOT OF HYDRA COMMAND REVEALING PW>>
