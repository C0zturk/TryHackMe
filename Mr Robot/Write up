Mr Robot CTF
Victim IP - 10.10.155.227
VPN - 10.4.66.178

I start this box by commencing a `nmap -sV -A -T4 10.10.155.227` against the target

<<<insert_nmap_scan>>>

The nmap scan has revealed ports 80 and 22 to be open.  This identifies that the IP has http and ssh traffic allowed to it.  Lets try navigate to `http://10.10.155.227`

<<<insert_10.10.155.227_gui_photo>>>

Navigating to the gui of 10.10.155.227 reveals a CLI.  Typing `help` reveals command options.  Navigating through the options reveals nothing obscure.

As we learnt earlier the port 80/http is open.  Lets try curling the robots.txt file.

<<<insert photo of curl command>>>


Curling the robots.txt file reveals some hidden files.  Poking around in files reveals the 1st key under `key-1-of-3.txt`

<<<insert photo of key>>>

Entering the command `curl http://10.10.255.227/fsocity.dic -o fsocity.dic` retrieves the file and saves it locally on my kali machine as `fsocity.dic.  Retrieving the file via terminal using `cat` reveals unsorted data.  Entering `sort  fsocity.disc > sorted_fsocity.dic`
Sorted this output data into alphabetical order into an output file called `sorted_fsocity.dic`.  This output file has many duplicates as per the output in the terminal..

Entering `sort sorted_fsocity.dic | uniq > unique_fsocity.diq` removes the duplicates and places them into a new file called `unique_fsocity.dic`
This is essentially a wordlist that we can assume is either username or passwords.

We can now run gobuster against the URL to locate any hidden directories using the command `gobuster dir -u 10.10.155.227 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt`

<<<insert photo of gobuster_command>>>

The gobuster directory attack reveals directories and that the website is a wordpress site.  Poking about reveals interesting information under http://10.10.155.227/licence

<<<insert photo of curl<ip>licence>>>

Scrolling down reveals a hash key
<<<insert photo of curl<ip>key>>>

Entering this hash key in cyber chef reveals the hash key as `elliot:ER28-0652`

This can also be done via the terminal by entering `echo ZWxsaW90OkVSMjgtMDY1Mgo= | base64 -d`

<<<insert photo of decrypting hash key>>>

Navigating to `http://10.10.155.227/wp-admin` reveals the worpdress login page.  Entering the credentials `elliot/ER28-0652 allows us to log in` 

<<<insert photo of loggin in to wp-admin page>>>>


We have now brute forced into the wordpress admin page

<<<insert photo of successful log in admin page>>>

Selecting Apperance > Editor > 404 Template via the left hand plane allows us to edit the code on the page.  Navigating to `www.revshells.com` and selecting PHP Pentestmonkey allows us to enter our kali box as a netcat listener to establish a reverse kali shell to the wordpress site.

<<<insert photo of rev shell generator>>>

I copy this out and paste it into the template and update it on the wordpress admin page.

Now I can fire up a netcat listener locally on my kali machine

<<<insert photo of netcat listener command>>>

After setting up the netcat listener I can navigate to `http://10.10.227.155/404.php` to establish a reverse shell connection to the website.

<<<insert photo of netcat + gui 404.php command>>>

Entering `which python` reveals that python is installed and entering `python --version` reveals the version of python that is installed on the wordpress machine.

Entering the command `python -c 'import pty;pty.spawn("/bin/bash")'` allows for a more stable shell so our net cat listener doesn't drop.

<<<insert photo of python -c command>>>

Enumerating linux via `dir` and `cd` commands reveals the key-2-of-3.txt under /home/robot/key-2-of-3.txt

<<<insert photo of key 2>>>

Unable to cat the key due to permission denied but we are able to cat the password.raw-md5 file which reveals `robot:c3fcd3d76192e4007dfb496cca67e13b`

<<<insert photo of robot:hash>>>

crackstation reveals the hash as `abcdefghijklmnopqrstuvwxyz`

Using this password we can enter root privileges via `su robot`

Entering the password above allows us to gain root access to the shell

No we can retrieve the key 2 file via `cat key-2-of-3.txt`

<<<insert photo of retrieving cat hash>>>

Navigating to the root folder results in a permission denied.  

Running the command `find / -perm -4000 2>/dev/null` will earch for all files having SUID bit sets

<<<insert photo of running find -perm command>>>

Executing the command `nmap --interactive` reveals that nmap is running at version 3.81.  gtfobins reveals that versions 2.02 to 5.21 are vulnerable to shell escalation via the `!sh` command

<<<Insert photo of gaining root via !sh>>>

Now that we have root access I want to check the root folder.  Navigating there and entering `dir` reveals key 3.  Using `cat` retrieves the key.

<<<insert photo of key 3>>>









